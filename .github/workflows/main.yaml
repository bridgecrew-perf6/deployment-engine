name: Deployment Engine
on:
 repository_dispatch:
  type:
    - sandbox-deploy-spring-boot-artifact
  
jobs:
  build:
    runs-on: ubuntu-latest

    env:
        ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
        ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
        ARM_SUBSCRIPTION_ID: ${{secrets.AZ_SANDBOX_SPN_SUBSCRIPTION_ID}}
        ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
        RSG_NAME: sandbox          
        ACI_NAME: az-sandbox-spring-boot-service-container-01           
        ACI_PORT:  8080
        SPRING_BOOT_ARTIFACT: ${{github.event.client_payload.deploy_artifact}}  
        SERVICE_VERSION : ${{github.event.client_payload.LATEST_TAG}}
        EMAIL_RECIPIENT: ${{secrets.EMAIL_RECIPIENT}}
        CC_EMAIL: ${{secrets.CC_EMAIL}}
        REPLY_TO_EMAIL: ${{secrets.REPLY_TO_EMAIL}}
        SANDBOX_SERVICE_NAME: ${{github.event.client_payload.SANDBOX_SERVICE_NAME}}
        BRANCH_NAME: upgrade-spring-boot-${{github.event.client_payload.LATEST_TAG}}
        CURRENT_ENV: sandbox
        SANDBOX_SERVICE: spring-boot-service-01.
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - uses: actions/checkout@v2

      - name: AZ Login
        run: 
          az login --service-principal --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
          
      - name: Create Branch
        run: |
          git config user.email "github-action-pr-bot@github.com"
          git config user.name "Github action pr bot"
          git branch $BRANCH_NAME
          git checkout $BRANCH_NAME
          
      - name: Update Deployment Repo
        run: |
          echo "$( jq '.version = "${{ env.SERVICE_VERSION }}"' ${{ env.CURRENT_ENV }}/${{ env.SANDBOX_SERVICE}}json)" > ${{ env.CURRENT_ENV }}/${{ env.SANDBOX_SERVICE}}json
          cat ${{ env.CURRENT_ENV }}/${{ env.SANDBOX_SERVICE}}json          
          git commit -m "updated" .
          git push -u origin $BRANCH_NAME 

      - name: Create PR 
        uses: actions/github-script@v1.1
        with:
          github_token: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
          script: |
            const pr = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `upgrade ${{github.event.client_payload.SERVICE_NAME}} version to ${{github.event.client_payload.LATEST_TAG}} `,
              head: process.env.BRANCH_NAME,
              base: 'main'
            });
            github.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.data.number,
            labels: ['automerge']
            });
    
      - name: Deploy Image on Azure Container
        run: 
             az container create --resource-group $RSG_NAME --name $ACI_NAME --image $SPRING_BOOT_ARTIFACT --ports $ACI_PORT    

      - name: Notify Card
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
        # mail server settings
           server_address: smtp.gmail.com
           server_port: 465
           # user credentials
           username: ${{ secrets.EMAIL_USERNAME }}
           password: ${{ secrets.EMAIL_PASSWORD }}
           # email subject
           subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
           # email body as text
           body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
           # comma-separated string, send email to
           to: ${{ env.EMAIL_RECIPIENT }}
           cc: ${{ env.CC_EMAIL }}
           reply_to: ${{ env.REPLY_TO_EMAIL }}
           # from email name
           from: ${{ env.SANDBOX_SERVICE_NAME }}   
